# encoding: UTF-8
require_relative '../test_helper'

describe "creq req" do
  let(:cmd) {'req'}
  let(:id)  {'id'}
  let(:file){"#{REQ}/id.md"}

  it 'must abort if file exists' do
    inside_sandbox do
      proc {
        Cli.start([cmd, id])
      }.must_output /File 'req\/id\.md' created/
      File.exist?(file).must_equal true
      proc { Cli.start([cmd, id]) }.must_output(
         /File 'req\/id\.md' already exists/)
    end
  end

  describe "creq req ID" do
    it 'must create requirements file' do
      inside_sandbox do
        proc {Cli.start([cmd, id])}.must_output("File 'req/id.md' created.\n")
        File.read(file).must_equal %(# [id] id\n)
      end
    end
  end

  describe "creq req ID TITLE" do
    let(:title)  {'title'}

    it 'must create requirement file' do
      inside_sandbox do
        proc {Cli.start([cmd, id, title])}.must_output("File 'req/id.md' created.\n")
        File.read(file).must_equal %(# [id] title\n)
      end
    end
  end

  describe "creq req ID -t" do
    let(:title)  {'title'}
    let(:template) {'tt.id'}

    it 'must create requirement by template' do
      inside_sandbox do
%(System shall provide the next functions:
* select
* create
* update
* delete

## [@@id.select] Select

## [@@id.create] Create

## [@@id.update] Update

## [@@id.delete] Delete

).tap {|tt| File.write("#{TT}/tt.id.md.tt", tt)}

        proc {
          Cli.start [cmd, id, title, '-t', template]
        }.must_output /created/

%(# [id] title

TODO: The text below has been generated by the 'tt/tt.id.md.tt' template. Please correct the text and remove this line.
System shall provide the next functions:
* select
* create
* update
* delete

## [id.select] Select

## [id.create] Create

## [id.update] Update

## [id.delete] Delete

).must_equal File.read(file)
      end
    end
  end

end
